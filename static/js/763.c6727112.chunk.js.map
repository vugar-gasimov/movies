{"version":3,"file":"static/js/763.c6727112.chunk.js","mappings":"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","sources":["Helpers/cutText.jsx","Hooks/useHttp.jsx","Services/api.js","components/MovieCast.jsx"],"sourcesContent":["export const cutText = str => {\n  return `${str.slice(0, 11)}...`;\n};\n\nexport const lessCutText = str => {\n  return `${str.slice(0, 35)}`;\n};\n","import { useEffect, useState } from 'react';\n\nexport const useHttp = (fn, params) => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fn(params)\n      .then(data => setMovies(data))\n      .catch(error => setError(error.message));\n  }, [params, fn]);\n  return [movies, setMovies, { error }];\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = '3d5790bdd3fdeefaeb5478f646385f38';\n\nexport const fetchMovies = async params => {\n  const { data } = await axios.get('trending/all/day', {\n    params: { ...params, api_key: api_key },\n  });\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: { api_key: api_key },\n  });\n  return data;\n};\n\nexport const fetchCastById = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, {\n    params: { api_key: api_key },\n  });\n  return data.cast;\n};\nexport const fetchReviewsById = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, {\n    params: { api_key: api_key },\n  });\n  return data;\n};\n\nexport const fetchMovieByQuery = async (query, params) => {\n  const { data } = await axios.get(`search/movie`, {\n    params: { query, ...params, api_key: api_key },\n  });\n  return data.results;\n};\n","import React from 'react';\n\nimport { useHttp } from '../Hooks/useHttp';\nimport { fetchCastById } from '../Services/api';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { lessCutText } from 'Helpers/cutText';\nimport Loader from 'Loader/Loader';\nconst MovieCast = () => {\n  const { id } = useParams();\n  const [cast] = useHttp(fetchCastById, id);\n\n  if (!cast || cast.length === 0) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n  return (\n    <Container>\n      <Title>Movie Cast</Title>\n      <CastList>\n        {cast?.map(cast => (\n          <CastMember key={cast.id}>\n            <CastImage\n              width={250}\n              height={300}\n              loading=\"lazy\"\n              src={\n                cast.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                  : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQju-zj4n6hRiWsnJfgNALcjvXBuMuUtPQP7FIskz9LhOnrogjzZSdSbkirqmngfDeMHd4&usqp=CAU'\n              }\n              alt={cast.name}\n            />\n            <CastName>{lessCutText(cast.name)}</CastName>\n            <CastCharacter>{lessCutText(cast.character)}</CastCharacter>\n          </CastMember>\n        ))}\n      </CastList>\n    </Container>\n  );\n};\nexport default MovieCast;\nconst Container = styled.div`\n  display: flex;\n  max-width: 1400px;\n  overflow-x: auto;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin: 0 auto;\n`;\n\nconst CastList = styled.div`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  padding: 0;\n\n  overflow-x: auto;\n  width: 100%;\n`;\n\nconst CastMember = styled.div`\n  min-width: 320px;\n  max-height: 600px;\n  /* height: fit-content; */\n  text-align: center;\n  padding: 20px;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  background-color: #fdd03b;\n`;\n\nconst CastImage = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 5px;\n`;\n\nconst CastName = styled.h3`\n  margin: 10px 0;\n  color: #333;\n`;\n\nconst CastCharacter = styled.p`\n  color: #666;\n`;\n\nconst Title = styled.h3`\n  color: #fdd03b;\n  display: flex;\n  justify-content: center;\n`;\n"],"names":["cutText","str","concat","slice","lessCutText","useHttp","fn","params","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","useEffect","then","data","catch","message","axios","api_key","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","_objectSpread","sent","abrupt","results","stop","_x","apply","arguments","fetchMovieById","_ref2","_callee2","id","_yield$axios$get2","_context2","_x2","fetchCastById","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x3","fetchReviewsById","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchMovieByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x5","_x6","useParams","_useHttp","length","_jsxs","Container","children","_jsx","Title","CastList","map","CastMember","CastImage","width","height","loading","src","profile_path","alt","name","CastName","CastCharacter","character","Loader","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7"],"sourceRoot":""}